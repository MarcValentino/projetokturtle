/*
	Copyright (C) 2003-2006 Cies Breijs <cies AT kde DOT nl>

	This program is free software; you can redistribute it and/or
	modify it under the terms of version 2 of the GNU General Public
	License as published by the Free Software Foundation.

	This program is distributed in the hope that it will be useful,
	but WITHOUT ANY WARRANTY; without even the implied warranty of
	MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
	GNU General Public License for more details.

	You should have received a copy of the GNU General Public
	License along with this program; if not, write to the Free
	Software Foundation, Inc., 51 Franklin Street, Fifth Floor,
	Boston, MA 02110-1301, USA.
*/


//BEGIN GENERATED gui_connect_inc CODE

/* The code between the line that start with "//BEGIN GENERATED" and "//END GENERATED"
 * is generated by "generate.rb" according to the definitions specified in
 * "definitions.rb". Please make all changes in the "definitions.rb" file, since all
 * all change you make here will be overwritten the next time "generate.rb" is run.
 * Thanks for looking at the code!
 */

	connect(executer, SIGNAL(reset()), 
		canvas, SLOT(slotReset()));
	connect(executer, SIGNAL(clear()), 
		canvas, SLOT(slotClear()));
	connect(executer, SIGNAL(center()), 
		canvas, SLOT(slotCenter()));
	connect(executer, SIGNAL(go(double, double)), 
		canvas, SLOT(slotGo(double, double)));
	connect(executer, SIGNAL(goX(double)), 
		canvas, SLOT(slotGoX(double)));
	connect(executer, SIGNAL(goY(double)), 
		canvas, SLOT(slotGoY(double)));
	connect(executer, SIGNAL(forward(double)), 
		canvas, SLOT(slotForward(double)));
	connect(executer, SIGNAL(backward(double)), 
		canvas, SLOT(slotBackward(double)));
	connect(executer, SIGNAL(direction(double)), 
		canvas, SLOT(slotDirection(double)));
	connect(executer, SIGNAL(turnLeft(double)), 
		canvas, SLOT(slotTurnLeft(double)));
	connect(executer, SIGNAL(turnRight(double)), 
		canvas, SLOT(slotTurnRight(double)));
	connect(executer, SIGNAL(penWidth(double)), 
		canvas, SLOT(slotPenWidth(double)));
	connect(executer, SIGNAL(penUp()), 
		canvas, SLOT(slotPenUp()));
	connect(executer, SIGNAL(penDown()), 
		canvas, SLOT(slotPenDown()));
	connect(executer, SIGNAL(penColor(double, double, double)), 
		canvas, SLOT(slotPenColor(double, double, double)));
	connect(executer, SIGNAL(canvasColor(double, double, double)), 
		canvas, SLOT(slotCanvasColor(double, double, double)));
	connect(executer, SIGNAL(canvasSize(double, double)), 
		canvas, SLOT(slotCanvasSize(double, double)));
	connect(executer, SIGNAL(spriteShow()), 
		canvas, SLOT(slotSpriteShow()));
	connect(executer, SIGNAL(spriteHide()), 
		canvas, SLOT(slotSpriteHide()));
	connect(executer, SIGNAL(print(const QString&)), 
		canvas, SLOT(slotPrint(const QString&)));
	connect(executer, SIGNAL(fontSize(double)), 
		canvas, SLOT(slotFontSize(double)));

//END GENERATED gui_connect_inc CODE

	connect(executer, SIGNAL(getX(double&)),
		canvas, SLOT(getX(double&)));
	connect(executer, SIGNAL(getY(double&)),
		canvas, SLOT(getY(double&)));
	connect(executer, SIGNAL(getDirection(double&)),
		canvas, SLOT(getDirection(double&)));
	connect(executer, SIGNAL(message(const QString&)),
		this, SLOT(slotMessageDialog(const QString&)));
	connect(executer, SIGNAL(ask(QString&)),
		this, SLOT(slotInputDialog(QString&)));
